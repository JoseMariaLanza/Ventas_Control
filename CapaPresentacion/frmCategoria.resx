<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="clmnEliminar.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAB
        zwAAAc8B4QwQxwAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAASWSURBVHhe7ZtN
        aFxVGIbHIUkbO8VS0LZqElMVOzGGiBZDrW0XEcxCF2qXEcHGn3ShloAtFSpRaLUpaMWNCFrUhW7sQtGN
        XWobUIpSKhTxD382oij4L9f3Hc4ZTs68Ife7MxM63vvBQ859zznfec+X5N4zmUkpSZJcI8U8IcU8IcU8
        IcU8IcU8IcUsIHrADHgHnAWftRjmZG6u0aM8ZEGKVhBryz0rz+ErL9oO1mJBLlJerEjRCuKYN1fpryaX
        j0+Ce1rMZFLp21QvAnhZebEiRQuILvA7TW3Yeley9eh8W1k3drsvANfsUp4sSNECouoMJaMzr0jTrWTk
        4Rd9AUhVebIgRQuIUW/ohv1vStOt5PrHXvObJ6PKkwUpWqAJb6gogCrAcyeT6q7DycY7HzUxdP8RzD3V
        kK/jCjA0NefNmhmefr4hX8cV4MYDx5PeSwaSclePiQvXDyabZ99uyFfcA4oCFAXwmyedcQ9YdelVSVdv
        xcSqy67+f9wDqlOHvVkz1z50tCFfxxXg5mdxDrjvaTzb95jg2YFniDhfcQ8oCnD+FWDIGxqdOSZNt5KR
        Rxa8GhxSnixI0QKiG/xBQxtuuVuabiXrxu7wm+ea3cqTBSlaQbzuTCWrB69L+m/blfRPTLUW5Fw9MOw3
        T15VXqxI0Qri4nL3iq8Cc20Fa32Or2uVFytSzAKiFzwO3gdfgC+X4DvgN8W2GhPCnMzNNVYqD1mQ4nKA
        qD892FZjlgMpLgdFAYoCFAUoCtAxBUDwEXcIfAp+AzyFNcufwBeAbTXGCr2dBk+CXrWXGCmGIFaAj4E3
        2yl8ApY8L0gxBPGES0jeBbvBAy3gKeDzsq3GWKE3evR5D6g9hUgxBPGBS3ZC9WcF0bZ7AOKEyzuv+kOk
        GIL43iXbp/qzgmhnAfa5vD+p/hAphiB+cMn2qv6sINpZgL0u78+qP0SKIYiiAC5ZUQDVnxXE+VUAxBqw
        GYxF/Ag44IVA82wC5TChAtEHbgLh3EnATsJ22MexfSpXCKIM6CGcS+iVA34NNA/3uCbIUTvovAS8GSvf
        gvHQWJB8EJwE8Zy0fAj6F8k9Drh2PCct3DP3XnrGCc3ASg8Ik6dcfzMwxwVRXv5E/QLisVa499I37uI4
        GAbXGJgAfwPO3x2Z3Oh0sh/wR9XCLPDzr4xyTzudryFuBWr+YoyA9wDnc+/1Re4NF0kLgh9aZONgpG93
        Olkf9qUBcUUwf3vUd9Dpp0M9LYgH3fzahW80W4BDkb7D6aTZAuyI+vjKlI2iAKGeFkRRADe/duEbRQHU
        4KVAdHwB/nKNaTV4KRD+MTob6VucThY8xtKAqL/rDLZEff4ReS7U04LY4+Zz76WP3MXXYA7wEZOWNwDn
        kp3RIjxa/+P6eKLjd82CP0H+C+pHV5d7p+sjfGNWzV+MI8CfILn32mGGi/iEWZgHDR9dR7BI8VgrcyIv
        P6LPNeOxFrjnCZ9wG3gLnAH8nU4Lv0usaiU26UHwb3V8U9PybzQcyzn8XV1wDA7yVgDXpgeVYzG4R+51
        Wy1PnDhvSDFPSDFPSDFPSDFPSDE/JKX/AHLl1JLGtI6EAAAAAElFTkSuQmCC
</value>
  </data>
</root>